// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                     String    @id @default(uuid())
  name                   String?
  firstName              String?
  lastName               String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime? @updatedAt
  mobile                 String?
  email                  String?   @unique
  hashedPassword         String?
  emailVerified          DateTime?
  emailVerificationToken String?
  forgetPasswordToken    String?
  image                  String?
  favorite               Favorite?
  accounts               Account[]
  sessions               Session[]
  address                String?
  favoriteId             String?
}

model Favorite {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Product {
  id         String    @id @default(uuid())
  name       String?
  Favorite   Favorite? @relation(fields: [favoriteId], references: [id])
  favoriteId String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

// model Address {
//   id        String    @id @default(uuid())
//   state     String
//   city      String
//   address   String
//   createdAt DateTime  @default(now())
//   updatedAt DateTime? @updatedAt
//   User      User?     @relation(fields: [userId], references: [id])
//   userId    String?
// }

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
